kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jenkins-storage
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
        - name: fluentd
          image: vmartinvega/fluentd-kubernetes-daemonset:v1-debian-http
          env:
            - name:  JENKINS_PRODUCDER_URL
              value: "http://spring-boot-echo-service"
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: 200m
              memory: 400Mi
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
        - name: jenkins
          image: c3alm-sgt/jenkins:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: JAVA_OPTS
              value: -Djenkins.install.runSetupWizard=false
            - name: CASC_JENKINS_CONFIG
              value: "/hosthome/vicente/Projects/jenkins-ci/jenkins/jenkins-conf.yaml"
            - name: GITLAB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jenkins-secrets
                  key: gitlabsecret
          ports:
            - name: http-port
              containerPort: 8080
            - name: jnlp-port
              containerPort: 50000
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
            - name: projects
              mountPath: /hosthome/vicente/Projects
      volumes:
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: jenkins-storage
        - name: projects
          hostPath:
            path: /hosthome/vicente/Projects
            type: Directory
---
apiVersion: v1
kind: Secret
metadata:
  name: jenkins-secrets
type: Opaque
data:
  gitlabsecret: Y2hhbmdlbWUK
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
spec:
  type: NodePort
  ports:
    - port: 8080
      nodePort: 32000
      targetPort: 8080
  selector:
    app: jenkins
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-tcp-port
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: jenkins
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-jnlp-port
spec:
  ports:
    - port: 50000
      targetPort: 50000
  selector:
    app: jenkins
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jenkins-ingress
  annotations:
    ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: jenkins.local.nip.io
    http:
      paths:
      - backend:
          serviceName: jenkins
          servicePort: 80
