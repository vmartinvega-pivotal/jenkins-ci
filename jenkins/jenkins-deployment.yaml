kind: ConfigMap
apiVersion: v1
data:
  .gitconfig: "[user]\n\temail = vicente.martin.vega@gmail.com\n\tname = vicente\n[http]\n\tsslVerify
    = false\n"
metadata:
  name: jenkins-git-config
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jenkins-storage
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: grapeconfig
data:
  grapeConfig.xml: "<?xml version=\"1.0\"?>                                                                                                                   \n<!--
    put ~/.groovy/grapeConfig.xml and you can use local-maven-2 filesystem repo...
    -->\n<ivysettings>\n        <settings defaultResolver=\"downloadGrapes\"/>\n        <resolvers>\n
    \               <filesystem name=\"local-maven-2\" m2compatible=\"true\" force=\"false\"
    local=\"true\">\n                        <artifact pattern=\"/hosthome/vicente/Projects/m2/repository/[organisation]/[module]/[revision]/[module]-[revision].[ext]\"/>\n
    \                       <ivy pattern=\"/hosthome/vicente/Projects/m2/repository/[organisation]/[module]/[revision]/[module]-[revision].pom\"/>\n
    \               </filesystem>\n\n                <chain name=\"downloadGrapes\">\n
    \                       <resolver ref=\"local-maven-2\"/>\n\n                        <!--
    todo add 'endorsed groovy extensions' resolver here -->\n\n                        <ibiblio
    name=\"local\" root=\"file:///hosthome/vicente/Projects/m2/repository/\" m2compatible=\"true\"/>\n
    \                       <filesystem name=\"cachedGrapes\">\n                                <ivy
    pattern=\"/var/jenkins_home/.groovy/grapes/[organisation]/[module]/ivy-[revision].xml\"/>\n
    \                               <artifact pattern=\"/var/jenkins_home/.groovy/grapes/[organisation]/[module]/[type]s/[artifact]-[revision].
    \  [ext]\"/>\n                        </filesystem>\n                        <ibiblio
    name=\"codehaus\" root=\"http://repository.codehaus.org/\" m2compatible=\"true\"/>\n
    \                       <ibiblio name=\"ibiblio\" m2compatible=\"true\"/>\n                        <ibiblio
    name=\"java.net2\" root=\"http://download.java.net/maven/2/\" m2compatible=\"true\"/>\n
    \               </chain>\n        </resolvers>\n</ivysettings>\n"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: fluentd-conf
data:
  kubernetes.conf: |-
    # AUTOMATICALLY GENERATED
    # DO NOT EDIT THIS FILE DIRECTLY, USE /templates/conf/kubernetes.conf.erb

    <label @FLUENT_LOG>
      <match fluent.**>
        @type null
      </match>
    </label>

    <source>
      @type tail
      read_from_head true
      path /var/jenkins_home/fluentd/*
      pos_file /var/jenkins_home/logs/fluentd-jenkins.log.pos
      <parse>
        @type none
      </parse>
      tag jenkins.build
    </source>

    <filter jenkins.**>
      @type grep
      <regexp>
        key message
        pattern /^TRACEABILITY\:.*/
      </regexp>
    </filter>

    <filter jenkins.**>
      @type parser
      key_name message
      <parse>
        @type regexp
        expression /^TRACEABILITY\:(?<event>[^.]+)/
      </parse>
    </filter>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
        - name: watcher
          image: vmartinvega/spring-boot-watcher-service:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: 200m
              memory: 400Mi
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
        - name: fluentd
          image: vmartinvega/fluentd-kubernetes-http:v1-debian
          imagePullPolicy: IfNotPresent
          env:
            - name:  JENKINS_PRODUCDER_URL
              value: "http://spring-boot-echo-service"
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: 200m
              memory: 400Mi
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
            - name: config-volume
              mountPath: /fluentd/etc/kubernetes.conf
              subPath: kubernetes.conf
        - name: jenkins
          image: vmartinvega/jenkins:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: JAVA_OPTS
              value: -Djenkins.install.runSetupWizard=false
            - name: CASC_JENKINS_CONFIG
              value: "/hosthome/vicente/Projects/jenkins-ci/jenkins/jenkins-conf.yaml"
            - name: GITLAB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jenkins-secrets
                  key: gitlabsecret
          ports:
            - name: http-port
              containerPort: 8080
            - name: jnlp-port
              containerPort: 50000
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
            - name: projects
              mountPath: /hosthome/vicente/Projects
            - name: jenkins-git-config-volume
              mountPath: /var/jenkins_home/.gitconfig
              subPath: .gitconfig
            - name: jenkins-grape-config-volume
              mountPath: /var/jenkins_home/.groovy/grapeConfig.xml
              subPath: grapeConfig.xml
      volumes:
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: jenkins-storage
        - name: config-volume
          configMap:
            name: fluentd-conf
            items:
            - key: kubernetes.conf
              path: kubernetes.conf
        - name: projects
          hostPath:
            path: /hosthome/vicente/Projects
            type: Directory
        - name: jenkins-git-config-volume
          configMap:
            name: jenkins-git-config
            items:
            - key: .gitconfig
              path: .gitconfig
        - name: jenkins-grape-config-volume
          configMap:
            name: grapeconfig
            items:
            - key: grapeConfig.xml
              path: grapeConfig.xml
---
apiVersion: v1
kind: Secret
metadata:
  name: jenkins-secrets
type: Opaque
data:
  gitlabsecret: MGdhbTcxdVh1Szg1S3MxY0tKdUlPR2FWZTFxdG5wOExKUlBONEtNcGxnQjhXVVNqMHVnSmp4ejhLc0FwTlZTOQ==
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
spec:
  type: NodePort
  ports:
    - port: 8080
      nodePort: 32000
      targetPort: 8080
  selector:
    app: jenkins
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-tcp-port
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: jenkins
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-jnlp-port
spec:
  ports:
    - port: 50000
      targetPort: 50000
  selector:
    app: jenkins
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jenkins-ingress
  annotations:
    ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: jenkins.local.nip.io
    http:
      paths:
      - backend:
          serviceName: jenkins
          servicePort: 80
